{"version":3,"sources":["components/filter/Filter.module.css","components/App.module.css","components/dataInput/DataInput.js","components/contacts/contactItem/ContactItem.js","components/contacts/Contacts.js","components/section/Section.js","components/filter/Filter.js","components/App.js","index.js","components/dataInput/DataInput.module.css","components/contacts/Contacts.module.css","components/section/Section.module.css"],"names":["module","exports","DataInput","addUser","isContactExist","useState","name","setName","number","setNumber","onHandleChange","e","target","value","className","style","form","onSubmit","preventDefault","alert","id","shortid","generate","type","pattern","title","required","onChange","btn","ContactItem","user","removeUser","s","item","button","onClick","Contacts","filterInputHandler","map","Section","children","section","toUpperCase","Filter","filter","setFilter","label","input","App","JSON","parse","localStorage","getItem","contacts","setContacts","useEffect","setItem","stringify","app","prev","some","toLowerCase","users","includes","contact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.48c50a3b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__3K0YO\",\"label\":\"Filter_label__23XmH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1tA9O\"};","import React, {useState} from \"react\";\nimport PropTypes from 'prop-types';\nimport style from \"./DataInput.module.css\";\nimport shortid from 'shortid';\n\nconst DataInput = ({addUser, isContactExist}) => {\n\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n    const onHandleChange = e => {\n        const {value, name} = e.target;\n\n        switch (name) {\n            case 'name':\n                setName(value);\n                break;\n            case 'number':\n                setNumber(value);\n                break;\n            default:\n                return;\n        }\n    }\n\n    const onHandleSubmit = (e) => {\n        e.preventDefault();\n\n        if (isContactExist(name)) {\n            alert(`${name} is already in contacts.`);\n            return;\n        }\n\n        addUser({\n            name: name,\n            number: number,\n            id: shortid.generate(),\n        });\n\n        setName('');\n        setNumber('');\n    }\n\n    return (\n        <form className={style.form} onSubmit={onHandleSubmit}>\n            <label>\n                Name:\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    className={style.name}\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                    required\n                    onChange={onHandleChange}\n                    value={name}\n                />\n            </label>\n            <label>\n                Number:\n                <input\n                    type=\"tel\"\n                    name=\"number\"\n                    className={style.number}\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                    required\n                    onChange={onHandleChange}\n                    value={number}\n                />\n            </label>\n            <button type=\"submit\" className={style.btn}>Add contact</button>\n        </form>\n    )\n}\n\nDataInput.propTypes = {\n    addUser: PropTypes.func.isRequired,\n}\n\nexport default DataInput;","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport s from \"../Contacts.module.css\";\n\nconst ContactItem = ({user, removeUser}) => {\n    const remove = () => removeUser(user.id);\n\n    return (\n        <li className={s.item}><span>{user.name}: </span>{user.number}\n            <button type=\"button\" className={s.button} onClick={remove}>Delete</button>\n        </li>\n    )\n}\n\nContactItem.propTypes = {\n    user: PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n    }),\n}\n\nexport default ContactItem;","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport ContactItem from \"./contactItem/ContactItem\";\n\nconst Contacts = ({filterInputHandler, removeUser}) => {\n\n    return (\n        <ul>\n            {filterInputHandler.map(user => (\n                <ContactItem user={user} key={user.id} removeUser={removeUser}/>\n            ))}\n        </ul>\n    );\n}\n\nContacts.propTypes = {\n    filterInputHandler: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string.isRequired,\n    })),\n    removeUser: PropTypes.func.isRequired,\n}\n\n\nexport default Contacts;","import React from \"react\";\nimport style from \"./Section.module.css\";\nimport PropTypes from 'prop-types';\n\nconst Section = ({children, title}) => {\n    return (\n        <div className={style.section}>\n            <h2 className={style.title}>{title.toUpperCase()}</h2>\n            {children}\n        </div>\n    );\n};\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.node.isRequired,\n}\n\nexport default Section;","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport style from \"./Filter.module.css\";\n\nconst Filter = ({filter, setFilter}) => {\n    return (\n        <>\n            <label className={style.label}>\n                Find contacts by name:\n                <input\n                    type=\"text\"\n                    name=\"filter\"\n                    className={style.input}\n                    onChange={setFilter}\n                    value={filter}\n                />\n            </label>\n        </>\n    );\n}\n\nFilter.propTypes = {\n    filter: PropTypes.string,\n    setFilter: PropTypes.func.isRequired,\n}\n\nexport default Filter;","import React, {useEffect, useState} from \"react\";\nimport style from \"./App.module.css\";\nimport DataInput from \"./dataInput/DataInput\";\nimport Contacts from \"./contacts/Contacts\";\nimport Section from \"./section/Section\";\nimport Filter from \"./filter/Filter\";\n\nconst App = () => {\n\n    const [contacts, setContacts] = useState(() => {\n        return JSON.parse(localStorage.getItem('contacts')) ?? [];\n    });\n\n    const [filter, setFilter] = useState('');\n\n    useEffect(() => {\n            localStorage.setItem('contacts', JSON.stringify(contacts));\n    }, [contacts]);\n\n    const isContactExist = (name) => contacts.some(item => item.name.toLowerCase() === name.toLowerCase());\n\n    const filterInputHandler = () => contacts.filter(item =>\n        item.name.toLowerCase().includes(filter.toLowerCase()));\n\n    const filterValue = (e) => setFilter(e.target.value);\n\n    const addUser = (user) => {\n\n        setContacts(prev => {\n            return [...prev, user];\n        })\n    };\n\n    const removeUser = (id) => {\n        setContacts(prev => [...prev.filter(contact => contact.id !== id)])\n    };\n\n    return (\n        <div className={style.app}>\n            <Section title=\"Phonebook\">\n                <DataInput\n                    addUser={addUser}\n                    isContactExist={isContactExist}\n                />\n            </Section>\n            <Section title=\"Contacts\">\n                <Filter filter={filter} setFilter={filterValue}/>\n                <Contacts\n                    users={contacts}\n                    filterInputHandler={filterInputHandler()}\n                    removeUser={removeUser}\n                />\n            </Section>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"DataInput_form__1El21\",\"number\":\"DataInput_number__2m9S-\",\"name\":\"DataInput_name__2_neu DataInput_number__2m9S-\",\"btn\":\"DataInput_btn__3YWIG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Contacts_item__2Gmj9\",\"button\":\"Contacts_button__3zKln\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2aN0g\",\"title\":\"Section_title__2oIwe\"};"],"sourceRoot":""}