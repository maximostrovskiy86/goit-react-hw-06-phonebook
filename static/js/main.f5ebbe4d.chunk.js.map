{"version":3,"sources":["components/contacts/Contacts.module.css","components/section/Section.module.css","components/filter/Filter.module.css","components/App.module.css","redux/phonebook-types.js","redux/phonebook-reducer.js","redux/store.js","redux/phonebook-actions.js","components/dataInput/DataInput.js","components/contacts/contactItem/ContactItem.js","components/contacts/Contacts.js","components/section/Section.js","components/filter/Filter.js","components/container/Container.js","components/App.js","index.js","components/dataInput/DataInput.module.css"],"names":["module","exports","combineReducers","items","state","type","payload","isContactExist","alert","name","types","console","log","isFind","some","item","toLowerCase","filter","contact","id","contactsPersistConfig","key","storage","blacklist","rootReducer","contacts","persistReducer","contactsReducer","store","createStore","composeWithDevTools","persistor","persistStore","user","value","connect","dispatch","addUser","contactsActions","useState","setName","number","setNumber","onHandleChange","e","target","className","style","form","onSubmit","preventDefault","shortid","generate","pattern","title","required","onChange","btn","ContactItem","onRemoveUser","s","button","onClick","filterInputHandler","allContacts","includes","removeUser","length","map","Section","children","section","toUpperCase","setFilter","label","input","Container","App","app","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.f5ebbe4d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Contacts_item__2Gmj9\",\"button\":\"Contacts_button__3zKln\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2aN0g\",\"title\":\"Section_title__2oIwe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__3K0YO\",\"label\":\"Filter_label__23XmH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1tA9O\"};","export default {\n    ADD: 'contact/add',\n    DELETE: 'contact/delete',\n    CHANGE_FILTER: 'contact/changeFilter',\n}","import {combineReducers} from 'redux';\nimport types from './phonebook-types';\n\nconst items = (state = [], {type, payload}) => {\n\n    const isContactExist = () => {\n        alert(`${payload.name} is already in contacts!`);\n        return [...state];\n    }\n\n    switch (type) {\n        case types.ADD:\n            console.log(payload)\n            const isFind = state.some(item => item.name.toLowerCase() === payload.name.toLowerCase());\n            return isFind ? isContactExist() : [...state, payload];\n        case types.DELETE:\n            return state.filter(contact => contact.id !== payload);\n        default:\n            return state;\n    }\n}\n\nconst filter = (state = '', {type, payload}) => {\n    switch (type) {\n        case types.CHANGE_FILTER:\n            return payload;\n        default:\n            return state;\n    }\n}\n\nexport default combineReducers({\n    items,\n    filter,\n});","import {createStore, combineReducers} from 'redux';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport contactsReducer from \"./phonebook-reducer\";\nimport {persistStore, persistReducer} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst contactsPersistConfig = {\n    key: 'contacts',\n    storage,\n    blacklist: ['filter'],\n};\n\nconst rootReducer = combineReducers({\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\n})\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nconst persistor = persistStore(store);\n\nexport default {store, persistor}\n","import types from './phonebook-types';\n\nconst addContact = (user) => ({\n    type: types.ADD,\n    payload: user,\n});\n\nconst deleteContact = (id) => ({\n    type: types.DELETE,\n    payload: id,\n});\n\nconst changeFilter = value => ({\n    type: types.CHANGE_FILTER,\n    payload: value,\n});\n\nexport default {addContact, deleteContact, changeFilter};","import React, {useState} from \"react\";\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport style from \"./DataInput.module.css\";\nimport shortid from 'shortid';\nimport contactsActions from \"../../redux/phonebook-actions\";\n\nconst DataInput = ({addUser}) => {\n\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n    const onHandleChange = e => {\n        const {value, name} = e.target;\n\n        switch (name) {\n            case 'name':\n                setName(value);\n                break;\n            case 'number':\n                setNumber(value);\n                break;\n            default:\n                return;\n        }\n    }\n\n    const onHandleSubmit = (e) => {\n        e.preventDefault();\n\n        addUser({\n            name: name,\n            number: number,\n            id: shortid.generate(),\n        });\n\n        setName('');\n        setNumber('');\n    }\n\n    return (\n        <form className={style.form} onSubmit={onHandleSubmit}>\n            <label>\n                Name:\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    className={style.name}\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                    required\n                    onChange={onHandleChange}\n                    value={name}\n                />\n            </label>\n            <label>\n                Number:\n                <input\n                    type=\"tel\"\n                    name=\"number\"\n                    className={style.number}\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                    required\n                    onChange={onHandleChange}\n                    value={number}\n                />\n            </label>\n            <button type=\"submit\" className={style.btn}>Add contact</button>\n        </form>\n    )\n}\n\nDataInput.propTypes = {\n    addUser: PropTypes.func.isRequired,\n}\n\nconst mapDispatchToProps = dispatch => ({\n    addUser: (user) => dispatch(contactsActions.addContact(user)),\n});\n\nexport default connect(null, mapDispatchToProps)(DataInput);","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport s from \"../Contacts.module.css\";\n\nconst ContactItem = ({name, id, number, onRemoveUser}) => {\n\n    const remove = () => onRemoveUser(id);\n\n    return (\n        <li className={s.item}><span>{name}: </span>{number}\n            <button type=\"button\" className={s.button} onClick={remove}>Delete</button>\n        </li>\n    )\n}\n\nContactItem.propTypes = {\n    user: PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n    }),\n}\n\nexport default ContactItem;","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport ContactItem from \"./contactItem/ContactItem\";\nimport {connect} from \"react-redux\";\nimport contactsActions from \"../../redux/phonebook-actions\";\n\nconst Contacts = ({contacts, removeUser}) => {\n    return (\n        <>\n            {contacts.length > 0 && (\n                <ul>\n                    {contacts.map(({id, name, number}) => (\n                        <ContactItem\n                            key={id}\n                            id={id}\n                            name={name}\n                            number={number}\n                            onRemoveUser={() => removeUser(id)}\n                        />\n                    ))}\n                </ul>\n            )}\n        </>\n    );\n}\n\nContacts.propTypes = {\n    contacts: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string.isRequired,\n    })),\n    removeUser: PropTypes.func.isRequired,\n}\n\nconst filterInputHandler = (allContacts, filter) => allContacts.filter(item =>\n    item.name.toLowerCase().includes(filter.toLowerCase()));\n\nconst mapStateToProps = ({contacts: {items, filter}}) => ({\n    contacts: filterInputHandler(items, filter)\n});\n\nconst mapDispatchToProps = dispatch => ({\n    removeUser: id => dispatch(contactsActions.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);","import React from \"react\";\nimport style from \"./Section.module.css\";\nimport PropTypes from 'prop-types';\n\nconst Section = ({children, title}) => {\n    return (\n        <div className={style.section}>\n            <h2 className={style.title}>{title.toUpperCase()}</h2>\n            {children}\n        </div>\n    );\n};\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.node.isRequired,\n}\n\nexport default Section;","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport {connect} from \"react-redux\";\nimport contactsActions from \"../../redux/phonebook-actions\";\nimport style from \"./Filter.module.css\";\n\nconst Filter = ({filter, setFilter}) => {\n    return (\n        <>\n            <label className={style.label}>\n                Find contacts by name:\n                <input\n                    type=\"text\"\n                    name=\"filter\"\n                    className={style.input}\n                    onChange={setFilter}\n                    value={filter}\n                />\n            </label>\n        </>\n    );\n}\n\nFilter.propTypes = {\n    filter: PropTypes.string,\n    setFilter: PropTypes.func.isRequired,\n}\n\nconst mapDispatchToProps = dispatch => ({\n    setFilter: (e) => dispatch(contactsActions.changeFilter(e.target.value)),\n})\n\nconst mapStateToProps = state => ({\n    value: state.contacts.filter,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import React from 'react';\nimport style from \"./Container.scss\";\n\nconst Container = ({children}) => {\n    return (\n        <div className={style.Container}>\n            {children}\n        </div>\n    );\n}\n\nexport default Container;\n","import React from \"react\";\nimport style from \"./App.module.css\";\nimport DataInput from \"./dataInput/DataInput\";\nimport Contacts from \"./contacts/Contacts\";\nimport Section from \"./section/Section\";\nimport Filter from \"./filter/Filter\";\nimport Container from \"./container/Container\";\n\nconst App = () => {\n    return (\n        <div className={style.app}>\n            <Container>\n                <Section title=\"Phonebook\">\n                    <DataInput/>\n                </Section>\n                <Section title=\"Contacts\">\n                    <Filter/>\n                    <Contacts/>\n                </Section>\n            </Container>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {Provider} from \"react-redux\";\nimport {PersistGate} from 'redux-persist/integration/react';\nimport store from \"./redux/store\";\nimport App from './components/App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store.store}>\n            <PersistGate loading={null} persistor={store.persistor}>\n                <App/>\n            </PersistGate>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"DataInput_form__1El21\",\"number\":\"DataInput_number__2m9S-\",\"name\":\"DataInput_name__2_neu DataInput_number__2m9S-\",\"btn\":\"DataInput_btn__3YWIG\"};"],"sourceRoot":""}